Двумерные массивы
int[][] имя = new int[ширина][высота];
__________________________
int[][] data = new int[2][5];
data[1][1] = 5;
___________________________
использовать быструю инициализацию:

// длины месяцев года поквартально
int[][] months = { {31, 28, 31}, {30, 31, 30}, {31, 31, 30}, {31, 30, 31} };
____________________________
 напишем этот код как:

// Важная матрица с данными
int[][] matrix = { {1, 2, 3, 4, 5}, {1, 2, 3, 4, 5} };
Ничего не замечаете? А если так:

// Важная матрица с данными
int[][] matrix = {
  {1, 2, 3, 4, 5},
  {1, 2, 3, 4, 5}
};
_______________________________
int[][] data = new int[2][5];
int[] row1 = data[0];
int[] row2 = data[1];
_______________________________
Вот с помощью такого кода можно поменять строки местами:

// Важная матрица с данными
int[][] matrix = {
  {1, 2, 3, 4, 5},
  {5, 4, 3, 2, 1}
};

int[] tmp = matrix[0];
matrix[0] = matrix[1];
matrix[1] = tmp;
___________________________________
Неровные массивы

Вот как будет выглядеть итоговый код:

// Важная матрица с данными
int[][] matrix = new int[2][];
matrix[0] = new int[10];
matrix[1] = new int[50]
________________________________
Допустим, вы хотите вывести на экран двумерный массив. Как же это сделать?

Наш код будет выглядеть примерно так:

int[][] matrix = new int[3][];
matrix[0] = new int[]{1, 2, 3, 4, 5, 6};
matrix[1] = new int[]{1, 2, 3};
matrix[2] = new int[]{1};
for (int i = 0; i < matrix.length; i++) {
   for (int j = 0; j < matrix[i].length; j++)
      System.out.print( matrix[i][j] + " " );
   System.out.println();
}
______________________________________

